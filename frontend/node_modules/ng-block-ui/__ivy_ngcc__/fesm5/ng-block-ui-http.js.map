{"version":3,"file":"ng-block-ui-http.js","sources":["ng:/ng-block-ui/http/block-ui-http-settings.service.ts","ng:/ng-block-ui/http/block-ui-http.interceptor.ts","ng:/ng-block-ui/http/block-ui-http.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpSettings } from 'ng-block-ui';\n\n@Injectable()\nexport class BlockUIHttpSettings {\n  settings: HttpSettings = {};\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { BlockUIService, BLOCKUI_DEFAULT } from 'ng-block-ui';\nimport { BlockUIHttpSettings } from './block-ui-http-settings.service';\n\n@Injectable()\nexport class BlockUIInterceptor implements HttpInterceptor {\n  private activeHttpRequests: number;\n\n  constructor(\n    private blockUIService: BlockUIService,\n    private blockUIHttpSettings: BlockUIHttpSettings\n  ) {\n    this.activeHttpRequests = 0;\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let active: boolean = false;\n\n    if (this.shouldBlock(request)) {\n      active = true;\n      this.activeHttpRequests++;\n      this.blockUIService.start(BLOCKUI_DEFAULT);\n    }\n\n    return next.handle(request)\n      .pipe(\n        finalize(() => {\n          if (this.shouldBlock(request)) {\n            this.activeHttpRequests--;\n            const { blockAllRequestsInProgress } = this.blockUIHttpSettings.settings;\n            let stopBlockUI: boolean = false;\n\n            if (!!blockAllRequestsInProgress && this.activeHttpRequests <= 0) {\n              this.activeHttpRequests = 0;\n              stopBlockUI = true;\n            } else if (active) {\n              stopBlockUI = true;\n            }\n\n            if (stopBlockUI) {\n              const method: string = blockAllRequestsInProgress ? 'stop' : 'reset';\n              this.blockUIService[method](BLOCKUI_DEFAULT);\n            }\n          }\n        })\n      );\n  }\n\n  shouldBlock(request: HttpRequest<any>): boolean {\n    const { method, urlWithParams } = request;\n    const { settings } = this.blockUIHttpSettings;\n    const requestFilters = settings.requestFilters || [];\n\n    return !requestFilters.some((f: any) => {\n      if (f && f.method && f.url) {\n        return f.method.toUpperCase() === method && f.url.test(urlWithParams);\n      } else if (typeof f === 'function') {\n        return f(request);\n      }\n\n      return f.test(urlWithParams);\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BlockUIModule, HttpSettings } from 'ng-block-ui';\nimport { BlockUIHttpSettings } from './block-ui-http-settings.service';\nimport { BlockUIInterceptor } from './block-ui-http.interceptor';\n\n\n// Needed for AOT compiling\nexport const BlockUIHttpModuleSettings = new InjectionToken<string>('BlockUIHttpModuleSettings');\n\nexport function provideSettingsInstance(settings: HttpSettings): BlockUIHttpSettings {\n  return { settings };\n}\n\n@NgModule({\n  imports: [BlockUIModule]\n})\nexport class BlockUIHttpModule {\n  public static forRoot(settings: HttpSettings = {}): ModuleWithProviders {\n    return {\n      ngModule: BlockUIHttpModule,\n      providers: [\n        {\n          provide: BlockUIHttpModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIHttpSettings,\n          useFactory: provideSettingsInstance,\n          deps: [BlockUIHttpModuleSettings]\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: BlockUIInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"]}